apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  creationTimestamp: null
  labels:
    cluster_id: 97f302ca-19c2-45be-b4b6-717fbf98206e
    subject: ui-pod-delete_litmus
    workflow_id: 4d40f1e3-b0b6-4ed6-89d4-8ce36659e53b
    workflows.argoproj.io/controller-instanceid: 97f302ca-19c2-45be-b4b6-717fbf98206e
  name: ui-pod-delete-1680759524
  namespace: litmus
spec:
  arguments:
    parameters:
    - name: adminModeNamespace
      value: litmus
  entrypoint: custom-chaos
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: argo-chaos
  templates:
  - inputs: {}
    metadata: {}
    name: custom-chaos
    outputs: {}
    steps:
    - - arguments: {}
        name: install-chaos-experiments
        template: install-chaos-experiments
    - - arguments: {}
        name: pod-delete-45t
        template: pod-delete-45t
  - container:
      args:
      - kubectl apply -f /tmp/pod-delete-45t.yaml -n {{workflow.parameters.adminModeNamespace}}
        &&  sleep 30
      command:
      - sh
      - -c
      image: litmuschaos/k8s:2.14.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: pod-delete-45t
        path: /tmp/pod-delete-45t.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            description:
              message: |
                Deletes a pod belonging to a deployment/statefulset/daemonset
            kind: ChaosExperiment
            metadata:
              name: pod-delete
              labels:
                name: pod-delete
                app.kubernetes.io/part-of: litmus
                app.kubernetes.io/component: chaosexperiment
                app.kubernetes.io/version: 2.14.0
            spec:
              definition:
                scope: Namespaced
                permissions:
                  - apiGroups:
                      - ""
                    resources:
                      - pods
                    verbs:
                      - create
                      - delete
                      - get
                      - list
                      - patch
                      - update
                      - deletecollection
                  - apiGroups:
                      - ""
                    resources:
                      - events
                    verbs:
                      - create
                      - get
                      - list
                      - patch
                      - update
                  - apiGroups:
                      - ""
                    resources:
                      - configmaps
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - ""
                    resources:
                      - pods/log
                    verbs:
                      - get
                      - list
                      - watch
                  - apiGroups:
                      - ""
                    resources:
                      - pods/exec
                    verbs:
                      - get
                      - list
                      - create
                  - apiGroups:
                      - apps
                    resources:
                      - deployments
                      - statefulsets
                      - replicasets
                      - daemonsets
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - apps.openshift.io
                    resources:
                      - deploymentconfigs
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - ""
                    resources:
                      - replicationcontrollers
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - argoproj.io
                    resources:
                      - rollouts
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - batch
                    resources:
                      - jobs
                    verbs:
                      - create
                      - list
                      - get
                      - delete
                      - deletecollection
                  - apiGroups:
                      - litmuschaos.io
                    resources:
                      - chaosengines
                      - chaosexperiments
                      - chaosresults
                    verbs:
                      - create
                      - list
                      - get
                      - patch
                      - update
                      - delete
                image: litmuschaos/go-runner:2.14.0
                imagePullPolicy: Always
                args:
                  - -c
                  - ./experiments -name pod-delete
                command:
                  - /bin/bash
                env:
                  - name: TOTAL_CHAOS_DURATION
                    value: "15"
                  - name: RAMP_TIME
                    value: ""
                  - name: FORCE
                    value: "true"
                  - name: CHAOS_INTERVAL
                    value: "5"
                  - name: PODS_AFFECTED_PERC
                    value: ""
                  - name: LIB
                    value: litmus
                  - name: TARGET_PODS
                    value: ""
                  - name: NODE_LABEL
                    value: ""
                  - name: SEQUENCE
                    value: parallel
                labels:
                  name: pod-delete
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: experiment-job
                  app.kubernetes.io/version: 2.14.0
    metadata: {}
    name: install-chaos-experiments
    outputs: {}
  - container:
      args:
      - -file=/tmp/chaosengine-pod-delete-45t.yaml
      - -saveName=/tmp/engine-name
      image: litmuschaos/litmus-checker:2.14.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: pod-delete-45t
        path: /tmp/chaosengine-pod-delete-45t.yaml
        raw:
          data: "apiVersion: litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n
            \ namespace: \"{{workflow.parameters.adminModeNamespace}}\"\n  generateName:
            pod-delete-45t\n  labels:\n    workflow_run_id: \"{{workflow.uid}}\"\nspec:\n
            \ appinfo:\n    appns: sock-shop\n    applabel: name=catalogue\n    appkind:
            deployment\n  jobCleanUpPolicy: retain  \n  engineState: active\n  chaosServiceAccount:
            litmus-admin\n  experiments:\n    - name: pod-delete\n      spec:\n        components:\n
            \         env:\n            - name: TOTAL_CHAOS_DURATION\n              value:
            \"30\"\n            - name: CHAOS_INTERVAL\n              value: \"10\"\n
            \           - name: FORCE\n              value: \"false\"\n            -
            name: PODS_AFFECTED_PERC\n              value: \"\"\n        probe:\n
            \         - name: check-catalogue-access-url\n            type: httpProbe\n
            \           mode: Continuous\n            runProperties:\n              probeTimeout:
            1000\n              retry: 0\n              interval: 1\n              initialDelaySeconds:
            3\n              stopOnFailure: true\n            httpProbe/inputs:\n
            \             url: http://front-end.sock-shop.svc.cluster.local:80/catalogue\n
            \             insecureSkipVerify: false\n              method:\n                get:\n
            \                 criteria: ==\n                  responseCode: \"200\"\n"
    metadata:
      labels:
        weight: "10"
    name: pod-delete-45t
    outputs: {}
status:
  finishedAt: null
  startedAt: null
