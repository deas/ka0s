apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    litmuschaos.io/chaos: "true"
  labels:
    app: sock-shop
    name: carts-db
  name: carts-db
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sock-shop
      name: carts-db
  template:
    metadata:
      labels:
        app: sock-shop
        name: carts-db
    spec:
      containers:
      - image: mongo:5.0.11
        imagePullPolicy: Always
        name: carts-db
        ports:
        - containerPort: 27017
          name: mongo
          protocol: TCP
        resources:
          limits:
            ephemeral-storage: 2Gi
          requests:
            ephemeral-storage: 1Gi
        securityContext:
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
      - emptyDir:
          medium: Memory
        name: tmp-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    litmuschaos.io/chaos: "true"
  labels:
    app: sock-shop
    name: catalogue-db
  name: catalogue-db
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sock-shop
      name: catalogue-db
  template:
    metadata:
      labels:
        app: sock-shop
        name: catalogue-db
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          value: fake_password
        - name: MYSQL_DATABASE
          value: socksdb
        resources:
          requests:
            ephemeral-storage: "500Mi"
          limits:
            ephemeral-storage: "1Gi"
        image: weaveworksdemos/catalogue-db:0.3.0
        imagePullPolicy: IfNotPresent
        name: catalogue-db
        ports:
        - containerPort: 3306
          name: mysql
          protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    litmuschaos.io/chaos: "true"
  labels:
    app: sock-shop
    name: orders-db
  name: orders-db
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sock-shop
      name: orders-db
  template:
    metadata:
      labels:
        app: sock-shop
        name: orders-db
    spec:
      containers:
      - image: mongo:5.0.11
        imagePullPolicy: Always
        name: orders-db
        ports:
        - containerPort: 27017
          name: mongo
          protocol: TCP
        resources: {}
        securityContext:
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
      - emptyDir:
          medium: Memory
        name: tmp-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    litmuschaos.io/chaos: "true"
  labels:
    app: sock-shop
    name: user-db
  name: user-db
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sock-shop
      name: user-db
  template:
    metadata:
      labels:
        app: sock-shop
        name: user-db
    spec:
      containers:
      - image: weaveworksdemos/user-db:0.4.0
        imagePullPolicy: IfNotPresent
        name: user-db
        ports:
        - containerPort: 27017
          name: mongo
          protocol: TCP
        resources: {}
        securityContext:
          capabilities:
            add:
            - CHOWN
            - SETGID
            - SETUID
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
      - emptyDir:
          medium: Memory
        name: tmp-volume
